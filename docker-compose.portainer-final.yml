version: '3.8'

volumes:
  team_planner_postgres_data:
  team_planner_redis_data:

networks:
  team_planner_network:
    driver: bridge

services:
  # Django with repository clone - improved version
  django:
    image: python:3.12-slim
    container_name: team_planner_django
    depends_on:
      - postgres
      - redis
    volumes:
      - app_code:/app
    working_dir: /app
    environment:
      - USE_DOCKER=true
      - DEBUG=true
      - DATABASE_URL=postgres://teamplanner:securepassword123@postgres:5432/team_planner
      - REDIS_URL=redis://redis:6379/0
      - CELERY_FLOWER_USER=admin
      - CELERY_FLOWER_PASSWORD=admin123
      - EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
      - DJANGO_SETTINGS_MODULE=config.settings.local
    ports:
      - '8001:8000'
    networks:
      - team_planner_network
    restart: unless-stopped
    command: >
      bash -c "
        echo '🚀 Setting up Team Planner Django application...' &&
        if [ ! -f 'manage.py' ]; then
          echo '📦 Installing system dependencies...' &&
          apt-get update -qq && apt-get install -y -qq git &&
          echo '📥 Cloning repository...' &&
          git clone https://github.com/crunchynapkin404/team_planner.git /tmp/repo &&
          echo '📂 Copying project files...' &&
          cp -r /tmp/repo/* . &&
          rm -rf /tmp/repo &&
          echo '✅ Repository setup complete!'
        fi &&
        echo '🐍 Installing Python dependencies...' &&
        pip install --upgrade pip -q &&
        pip install -r requirements/local.txt -q &&
        echo '💾 Running database migrations...' &&
        python manage.py migrate &&
        echo '🌐 Starting Django development server on port 8000...' &&
        python manage.py runserver 0.0.0.0:8000
      "

  # React frontend - improved version
  frontend:
    image: node:20-alpine
    container_name: team_planner_frontend
    depends_on:
      - django
    volumes:
      - frontend_code:/app
    working_dir: /app
    ports:
      - '3000:3000'
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    networks:
      - team_planner_network
    restart: unless-stopped
    command: >
      sh -c "
        echo '⚛️  Setting up React frontend...' &&
        if [ ! -f 'package.json' ]; then
          echo '📦 Installing git...' &&
          apk add --no-cache git &&
          echo '📥 Cloning repository...' &&
          git clone https://github.com/crunchynapkin404/team_planner.git /tmp/repo &&
          echo '📂 Copying frontend files...' &&
          if [ -d '/tmp/repo/frontend' ]; then
            cp -r /tmp/repo/frontend/* . 2>/dev/null || (
              cd /tmp/repo/frontend && 
              find . -type f -exec cp {} /app/ \; 2>/dev/null || true
            ) &&
            if [ -d '/tmp/repo/frontend/src' ]; then
              cp -r /tmp/repo/frontend/src . 2>/dev/null || true
            fi
          fi &&
          rm -rf /tmp/repo &&
          echo '✅ Frontend files copied!'
        fi &&
        echo '⚙️  Configuring Vite for Docker...' &&
        echo 'import { defineConfig } from \"vite\"' > vite.config.ts &&
        echo 'import react from \"@vitejs/plugin-react\"' >> vite.config.ts &&
        echo '' >> vite.config.ts &&
        echo 'export default defineConfig({' >> vite.config.ts &&
        echo '  plugins: [react()],' >> vite.config.ts &&
        echo '  server: {' >> vite.config.ts &&
        echo '    host: \"0.0.0.0\",' >> vite.config.ts &&
        echo '    port: 3000,' >> vite.config.ts &&
        echo '    watch: { usePolling: true },' >> vite.config.ts &&
        echo '    proxy: {' >> vite.config.ts &&
        echo '      \"/api\": { target: \"http://django:8000\", changeOrigin: true, secure: false },' >> vite.config.ts &&
        echo '      \"/shifts/api\": { target: \"http://django:8000\", changeOrigin: true, secure: false },' >> vite.config.ts &&
        echo '      \"/orchestrators/api\": { target: \"http://django:8000\", changeOrigin: true, secure: false }' >> vite.config.ts &&
        echo '    }' >> vite.config.ts &&
        echo '  }' >> vite.config.ts &&
        echo '})' >> vite.config.ts &&
        echo '📦 Installing npm dependencies...' &&
        npm install &&
        echo '🌐 Starting Vite development server...' &&
        npm run dev -- --host 0.0.0.0
      "

  postgres:
    image: postgres:15-alpine
    container_name: team_planner_postgres
    volumes:
      - team_planner_postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=team_planner
      - POSTGRES_USER=teamplanner
      - POSTGRES_PASSWORD=securepassword123
    networks:
      - team_planner_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U teamplanner -d team_planner"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: team_planner_redis
    volumes:
      - team_planner_redis_data:/data
    networks:
      - team_planner_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailpit:
    image: axllent/mailpit:latest
    container_name: team_planner_mailpit
    ports:
      - "8025:8025"
    networks:
      - team_planner_network
    restart: unless-stopped

volumes:
  app_code:
  frontend_code:
