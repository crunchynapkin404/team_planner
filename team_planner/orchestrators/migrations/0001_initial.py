# Generated by Django 5.1.11 on 2025-08-06 10:45

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OrchestrationRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('name', models.CharField(max_length=200, verbose_name='Run Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('status', models.CharField(choices=[('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('preview', 'Preview Mode')], default='running', max_length=20, verbose_name='Status')),
                ('start_date', models.DateField(verbose_name='Planning Start Date')),
                ('end_date', models.DateField(verbose_name='Planning End Date')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('total_shifts_created', models.PositiveIntegerField(default=0, verbose_name='Total Shifts Created')),
                ('incidents_shifts_created', models.PositiveIntegerField(default=0, verbose_name='Incidents Shifts Created')),
                ('waakdienst_shifts_created', models.PositiveIntegerField(default=0, verbose_name='Waakdienst Shifts Created')),
                ('max_consecutive_weeks', models.PositiveIntegerField(default=2, help_text='Maximum consecutive weeks same person can be assigned', verbose_name='Max Consecutive Weeks')),
                ('fairness_weight', models.DecimalField(decimal_places=2, default=Decimal('1.00'), help_text='Weight given to fairness vs other constraints', max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0.1')), django.core.validators.MaxValueValidator(Decimal('2.0'))], verbose_name='Fairness Weight')),
                ('execution_log', models.TextField(blank=True, verbose_name='Execution Log')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('initiated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orchestration_runs', to=settings.AUTH_USER_MODEL, verbose_name='Initiated By')),
            ],
            options={
                'verbose_name': 'Orchestration Run',
                'verbose_name_plural': 'Orchestration Runs',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='OrchestrationConstraint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('constraint_type', models.CharField(choices=[('availability', 'Availability'), ('leave_conflict', 'Leave Conflict'), ('max_consecutive', 'Max Consecutive Weeks'), ('skill_requirement', 'Skill Requirement'), ('fairness_threshold', 'Fairness Threshold'), ('custom', 'Custom')], max_length=30, verbose_name='Constraint Type')),
                ('severity', models.CharField(choices=[('hard', 'Hard Constraint (Must Not Violate)'), ('soft', 'Soft Constraint (Prefer Not to Violate)'), ('advisory', 'Advisory (Track Only)')], default='hard', max_length=20, verbose_name='Severity')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('shift_type', models.CharField(blank=True, help_text='Shift type this constraint applies to (empty = all types)', max_length=20, verbose_name='Shift Type')),
                ('description', models.TextField(verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('violations_count', models.PositiveIntegerField(default=0, verbose_name='Violations Count')),
                ('violation_details', models.TextField(blank=True, verbose_name='Violation Details')),
                ('employee', models.ForeignKey(blank=True, help_text='Employee this constraint applies to (null = all employees)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orchestration_constraints', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
                ('orchestration_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='constraints', to='orchestrators.orchestrationrun', verbose_name='Orchestration Run')),
            ],
            options={
                'verbose_name': 'Orchestration Constraint',
                'verbose_name_plural': 'Orchestration Constraints',
                'ordering': ['severity', 'constraint_type'],
            },
        ),
        migrations.CreateModel(
            name='OrchestrationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('shift_type', models.CharField(choices=[('incidents', 'Incidents'), ('waakdienst', 'Waakdienst')], max_length=20, verbose_name='Shift Type')),
                ('week_start_date', models.DateField(verbose_name='Week Start Date')),
                ('week_end_date', models.DateField(verbose_name='Week End Date')),
                ('fairness_score_before', models.DecimalField(decimal_places=2, help_text="Employee's fairness score before this assignment", max_digits=8, verbose_name='Fairness Score Before')),
                ('fairness_score_after', models.DecimalField(decimal_places=2, help_text="Employee's fairness score after this assignment", max_digits=8, verbose_name='Fairness Score After')),
                ('assignment_reason', models.TextField(help_text="Algorithm's reason for this assignment", verbose_name='Assignment Reason')),
                ('is_applied', models.BooleanField(default=False, help_text='Whether this result has been applied to create actual shifts', verbose_name='Is Applied')),
                ('applied_at', models.DateTimeField(blank=True, null=True, verbose_name='Applied At')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orchestration_results', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
                ('orchestration_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='orchestrators.orchestrationrun', verbose_name='Orchestration Run')),
            ],
            options={
                'verbose_name': 'Orchestration Result',
                'verbose_name_plural': 'Orchestration Results',
                'ordering': ['week_start_date', 'shift_type', 'employee__username'],
                'unique_together': {('orchestration_run', 'shift_type', 'week_start_date')},
            },
        ),
    ]
