# Generated by Django 5.1.11 on 2025-10-02 07:02

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shifts', '0007_alter_shifttemplate_options_shifttemplate_category_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SwapApprovalRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('name', models.CharField(max_length=200, verbose_name='Rule Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('priority', models.IntegerField(choices=[(1, 'Lowest'), (2, 'Low'), (3, 'Medium'), (4, 'High'), (5, 'Highest')], default=3, help_text='Higher priority rules are evaluated first', verbose_name='Priority')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('applies_to_shift_types', models.JSONField(blank=True, default=list, help_text='List of shift types this rule applies to. Empty means all types.', verbose_name='Applies to Shift Types')),
                ('auto_approve_enabled', models.BooleanField(default=False, help_text='If true, requests meeting criteria will be auto-approved', verbose_name='Enable Auto-Approval')),
                ('auto_approve_same_shift_type', models.BooleanField(default=True, help_text='Auto-approve only if both shifts are the same type', verbose_name='Require Same Shift Type')),
                ('auto_approve_max_advance_hours', models.IntegerField(blank=True, help_text='Maximum hours in advance the swap can be requested', null=True, verbose_name='Maximum Advance Hours')),
                ('auto_approve_min_seniority_months', models.IntegerField(blank=True, help_text='Minimum months of employment required for both employees', null=True, verbose_name='Minimum Seniority (Months)')),
                ('auto_approve_skills_match_required', models.BooleanField(default=False, help_text='Auto-approve only if employees have compatible skills', verbose_name='Require Skills Match')),
                ('requires_manager_approval', models.BooleanField(default=True, help_text='Requires approval from a manager', verbose_name='Requires Manager Approval')),
                ('requires_admin_approval', models.BooleanField(default=False, help_text='Requires approval from an administrator', verbose_name='Requires Admin Approval')),
                ('approval_levels_required', models.IntegerField(default=1, help_text='Number of approval levels required (1-5)', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Approval Levels Required')),
                ('allow_delegation', models.BooleanField(default=True, help_text='Allow approvers to delegate their approval authority', verbose_name='Allow Delegation')),
                ('max_swaps_per_month_per_employee', models.IntegerField(blank=True, help_text='Maximum number of swaps an employee can request per month', null=True, verbose_name='Max Swaps Per Month Per Employee')),
                ('notify_on_auto_approval', models.BooleanField(default=True, help_text='Send notification when a request is auto-approved', verbose_name='Notify on Auto-Approval')),
            ],
            options={
                'verbose_name': 'Swap Approval Rule',
                'verbose_name_plural': 'Swap Approval Rules',
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ApprovalDelegation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, help_text='Leave blank for indefinite delegation', null=True, verbose_name='End Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('reason', models.TextField(blank=True, verbose_name='Reason')),
                ('delegate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delegations_received', to=settings.AUTH_USER_MODEL, verbose_name='Delegate')),
                ('delegator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delegations_granted', to=settings.AUTH_USER_MODEL, verbose_name='Delegator')),
            ],
            options={
                'verbose_name': 'Approval Delegation',
                'verbose_name_plural': 'Approval Delegations',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='SwapApprovalChain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('level', models.IntegerField(help_text='Sequential level in the approval chain (1, 2, 3...)', verbose_name='Approval Level')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('skipped', 'Skipped'), ('delegated', 'Delegated')], default='pending', max_length=20, verbose_name='Status')),
                ('decision_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Decision DateTime')),
                ('decision_notes', models.TextField(blank=True, verbose_name='Decision Notes')),
                ('auto_approved', models.BooleanField(default=False, help_text='Whether this was auto-approved by the system', verbose_name='Auto-Approved')),
                ('approver', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='approval_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Approver')),
                ('delegated_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delegated_approvals', to=settings.AUTH_USER_MODEL, verbose_name='Delegated To')),
                ('swap_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approval_chain', to='shifts.swaprequest', verbose_name='Swap Request')),
                ('approval_rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approval_chains', to='shifts.swapapprovalrule', verbose_name='Approval Rule')),
            ],
            options={
                'verbose_name': 'Swap Approval Chain',
                'verbose_name_plural': 'Swap Approval Chains',
                'ordering': ['swap_request', 'level'],
                'unique_together': {('swap_request', 'level')},
            },
        ),
        migrations.CreateModel(
            name='SwapApprovalAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('action', models.CharField(choices=[('created', 'Created'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('delegated', 'Delegated'), ('auto_approved', 'Auto-Approved'), ('rule_applied', 'Rule Applied'), ('escalated', 'Escalated')], max_length=20, verbose_name='Action')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional structured data about the action', verbose_name='Metadata')),
                ('actor', models.ForeignKey(blank=True, help_text='User who performed the action (null for system actions)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='swap_audit_actions', to=settings.AUTH_USER_MODEL, verbose_name='Actor')),
                ('swap_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_trail', to='shifts.swaprequest', verbose_name='Swap Request')),
                ('approval_chain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_entries', to='shifts.swapapprovalchain', verbose_name='Approval Chain')),
                ('approval_rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_entries', to='shifts.swapapprovalrule', verbose_name='Approval Rule')),
            ],
            options={
                'verbose_name': 'Swap Approval Audit',
                'verbose_name_plural': 'Swap Approval Audits',
                'ordering': ['-created'],
            },
        ),
    ]
