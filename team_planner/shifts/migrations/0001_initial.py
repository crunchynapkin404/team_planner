# Generated by Django 5.1.11 on 2025-08-06 10:46

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0002_employeeskill_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SchedulingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('name', models.CharField(max_length=100, verbose_name='Rule Name')),
                ('shift_type', models.CharField(choices=[('incidents', 'Incidents'), ('waakdienst', 'Waakdienst'), ('changes', 'Changes'), ('projects', 'Projects')], max_length=20, verbose_name='Shift Type')),
                ('description', models.TextField(verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('priority', models.PositiveIntegerField(default=1, help_text='Higher numbers = higher priority', verbose_name='Priority')),
                ('configuration', models.JSONField(default=dict, help_text='Rule-specific configuration parameters', verbose_name='Configuration')),
            ],
            options={
                'verbose_name': 'Scheduling Rule',
                'verbose_name_plural': 'Scheduling Rules',
                'ordering': ['-priority', 'shift_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('start_datetime', models.DateTimeField(verbose_name='Start Date/Time')),
                ('end_datetime', models.DateTimeField(verbose_name='End Date/Time')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('auto_assigned', models.BooleanField(default=False, help_text='Was this shift assigned by the orchestrator?', verbose_name='Auto Assigned')),
                ('assignment_reason', models.TextField(blank=True, help_text='Reason for assignment (from orchestrator)', verbose_name='Assignment Reason')),
                ('assigned_employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_shifts', to=settings.AUTH_USER_MODEL, verbose_name='Assigned Employee')),
            ],
            options={
                'verbose_name': 'Shift',
                'verbose_name_plural': 'Shifts',
                'ordering': ['start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='OvertimeEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('date', models.DateField(verbose_name='Date')),
                ('hours', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Overtime Hours')),
                ('reason', models.TextField(verbose_name='Reason')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_overtime', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overtime_entries', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
                ('shift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='overtime_entries', to='shifts.shift', verbose_name='Related Shift')),
            ],
            options={
                'verbose_name': 'Overtime Entry',
                'verbose_name_plural': 'Overtime Entries',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ShiftTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('name', models.CharField(max_length=100, verbose_name='Template Name')),
                ('shift_type', models.CharField(choices=[('incidents', 'Incidents'), ('waakdienst', 'Waakdienst'), ('changes', 'Changes'), ('projects', 'Projects')], max_length=20, verbose_name='Shift Type')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('duration_hours', models.PositiveIntegerField(help_text='Expected duration in hours', verbose_name='Duration (hours)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('skills_required', models.ManyToManyField(blank=True, help_text='Skills required for this shift type', to='employees.employeeskill', verbose_name='Required Skills')),
            ],
            options={
                'verbose_name': 'Shift Template',
                'verbose_name_plural': 'Shift Templates',
                'ordering': ['shift_type', 'name'],
            },
        ),
        migrations.AddField(
            model_name='shift',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='shifts', to='shifts.shifttemplate', verbose_name='Template'),
        ),
        migrations.CreateModel(
            name='SwapRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='Status')),
                ('reason', models.TextField(blank=True, verbose_name='Reason')),
                ('response_notes', models.TextField(blank=True, verbose_name='Response Notes')),
                ('approved_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Approved Date/Time')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_swaps', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('requesting_employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swap_requests_made', to=settings.AUTH_USER_MODEL, verbose_name='Requesting Employee')),
                ('requesting_shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swap_requests_as_source', to='shifts.shift', verbose_name='Shift to Give Up')),
                ('target_employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swap_requests_received', to=settings.AUTH_USER_MODEL, verbose_name='Target Employee')),
                ('target_shift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='swap_requests_as_target', to='shifts.shift', verbose_name='Shift to Take Over')),
            ],
            options={
                'verbose_name': 'Swap Request',
                'verbose_name_plural': 'Swap Requests',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='TimeEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('clock_in', models.DateTimeField(verbose_name='Clock In')),
                ('clock_out', models.DateTimeField(blank=True, null=True, verbose_name='Clock Out')),
                ('break_duration_minutes', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Break Duration (minutes)')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to='shifts.shift', verbose_name='Shift')),
            ],
            options={
                'verbose_name': 'Time Entry',
                'verbose_name_plural': 'Time Entries',
                'ordering': ['-clock_in'],
            },
        ),
        migrations.CreateModel(
            name='FairnessScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('period_start', models.DateField(verbose_name='Period Start')),
                ('period_end', models.DateField(verbose_name='Period End')),
                ('incidents_days', models.PositiveIntegerField(default=0, help_text='Total days assigned to incident shifts', verbose_name='Incidents Days')),
                ('waakdienst_days', models.PositiveIntegerField(default=0, help_text='Total days assigned to waakdienst shifts', verbose_name='Waakdienst Days')),
                ('changes_days', models.PositiveIntegerField(default=0, help_text='Total days assigned to change shifts', verbose_name='Changes Days')),
                ('projects_days', models.PositiveIntegerField(default=0, help_text='Total days assigned to project shifts', verbose_name='Projects Days')),
                ('incidents_fairness_score', models.DecimalField(decimal_places=2, default=0.0, help_text='Fairness score for incident shifts (0-100)', max_digits=5, verbose_name='Incidents Fairness Score')),
                ('waakdienst_fairness_score', models.DecimalField(decimal_places=2, default=0.0, help_text='Fairness score for waakdienst shifts (0-100)', max_digits=5, verbose_name='Waakdienst Fairness Score')),
                ('overall_fairness_score', models.DecimalField(decimal_places=2, default=0.0, help_text='Combined fairness score (0-100)', max_digits=5, verbose_name='Overall Fairness Score')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fairness_scores', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'Fairness Score',
                'verbose_name_plural': 'Fairness Scores',
                'ordering': ['-period_end', 'employee__username'],
                'unique_together': {('employee', 'period_start', 'period_end')},
            },
        ),
        migrations.AddConstraint(
            model_name='shift',
            constraint=models.CheckConstraint(condition=models.Q(('end_datetime__gt', models.F('start_datetime'))), name='end_after_start'),
        ),
        migrations.AddConstraint(
            model_name='timeentry',
            constraint=models.CheckConstraint(condition=models.Q(('clock_out__isnull', True), ('clock_out__gt', models.F('clock_in')), _connector='OR'), name='clock_out_after_clock_in'),
        ),
    ]
