version: '3.8'

volumes:
  team_planner_postgres_data:
  team_planner_postgres_backups:
  team_planner_redis_data:

networks:
  team_planner_network:
    driver: bridge

services:
  django:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: team_planner_django
    container_name: team_planner_django
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app:z
    environment:
      # General
      - USE_DOCKER=true
      - IPYTHONDIR=/app/.ipython
      - DEBUG=true
      # Database
      - DATABASE_URL=postgres://teamplanner:securepassword123@postgres:5432/team_planner
      # Redis
      - REDIS_URL=redis://redis:6379/0
      # Celery
      - CELERY_FLOWER_USER=admin
      - CELERY_FLOWER_PASSWORD=admin123
      # Email
      - EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
    ports:
      - '8000:8000'
    command: /start
    networks:
      - team_planner_network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    image: team_planner_frontend
    container_name: team_planner_frontend
    depends_on:
      - django
    volumes:
      - ./frontend:/app:z
      - /app/node_modules
    ports:
      - '3000:3000'
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    command: npm run dev -- --host 0.0.0.0
    networks:
      - team_planner_network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: team_planner_postgres
    volumes:
      - team_planner_postgres_data:/var/lib/postgresql/data
      - team_planner_postgres_backups:/backups
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=team_planner
      - POSTGRES_USER=teamplanner
      - POSTGRES_PASSWORD=securepassword123
    networks:
      - team_planner_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: team_planner_redis
    volumes:
      - team_planner_redis_data:/data
    networks:
      - team_planner_network
    restart: unless-stopped

  celeryworker:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: team_planner_django
    container_name: team_planner_celeryworker
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app:z
    environment:
      - USE_DOCKER=true
      - DATABASE_URL=postgres://teamplanner:securepassword123@postgres:5432/team_planner
      - REDIS_URL=redis://redis:6379/0
      - EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
    command: /start-celeryworker
    networks:
      - team_planner_network
    restart: unless-stopped

  flower:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: team_planner_django
    container_name: team_planner_flower
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app:z
    environment:
      - USE_DOCKER=true
      - DATABASE_URL=postgres://teamplanner:securepassword123@postgres:5432/team_planner
      - REDIS_URL=redis://redis:6379/0
      - CELERY_FLOWER_USER=admin
      - CELERY_FLOWER_PASSWORD=admin123
    ports:
      - '5555:5555'
    command: /start-flower
    networks:
      - team_planner_network
    restart: unless-stopped

  mailpit:
    image: axllent/mailpit:latest
    container_name: team_planner_mailpit
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - team_planner_network
    restart: unless-stopped
